# Generated by Django 4.1.5 on 2023-11-10 06:24

import api.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('role', models.CharField(choices=[('OWNER', 'Owner'), ('REGULAR', 'Regular')], default='OWNER', max_length=50)),
                ('username', models.CharField(db_index=True, max_length=255, unique=True)),
                ('email', models.EmailField(blank=True, db_index=True, max_length=254, null=True, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('phone_no', models.PositiveBigIntegerField(unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256, unique=True)),
                ('visible', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='companies', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EarningsHead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('mandatory_earning', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earnings_heads', to='api.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earnings_heads', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeePersonalDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('paycode', models.CharField(max_length=32)),
                ('attendance_card_no', models.PositiveSmallIntegerField()),
                ('photo', models.ImageField(blank=True, null=True, storage=api.models.OverwriteStorage(), upload_to=api.models.employee_photo_handler)),
                ('father_or_husband_name', models.CharField(blank=True, max_length=100, null=True)),
                ('mother_name', models.CharField(blank=True, max_length=100, null=True)),
                ('wife_name', models.CharField(blank=True, max_length=100, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=10, null=True)),
                ('alternate_phone_number', models.CharField(blank=True, max_length=10, null=True)),
                ('email', models.EmailField(blank=True, max_length=150, null=True)),
                ('pan_number', models.CharField(blank=True, max_length=10, null=True)),
                ('driving_licence', models.CharField(blank=True, max_length=20, null=True)),
                ('passport', models.CharField(blank=True, max_length=8, null=True)),
                ('aadhaar', models.CharField(blank=True, max_length=12, null=True)),
                ('handicapped', models.BooleanField(default=False)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Others')], max_length=1, null=True)),
                ('marital_status', models.CharField(blank=True, choices=[('S', 'Single'), ('M', 'Married'), ('D', 'Divorced'), ('W', 'Widowed')], max_length=1, null=True)),
                ('blood_group', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3, null=True)),
                ('religion', models.CharField(blank=True, max_length=50, null=True)),
                ('education_qualification', models.CharField(blank=True, choices=[('0', 'No Qualification'), ('1', '1st class'), ('2', '2nd class'), ('3', '3rd class'), ('4', '4th class'), ('5', '5th class'), ('6', '6th class'), ('7', '7th class'), ('8', '8th class'), ('9', '9th class'), ('10', '10th class'), ('11', '11th class'), ('12', '12th class'), ('G', 'Graduate'), ('PG', ' Post Graduate')], max_length=2, null=True)),
                ('technical_qualification', models.CharField(blank=True, max_length=50, null=True)),
                ('local_address', models.CharField(blank=True, max_length=256, null=True)),
                ('local_district', models.CharField(blank=True, max_length=30, null=True)),
                ('local_state_or_union_territory', models.CharField(blank=True, choices=[('AP', 'Andhra Pradesh'), ('AR', 'Arunachal Pradesh'), ('AS', 'Assam'), ('BR', 'Bihar'), ('CT', 'Chhattisgarh'), ('GA', 'Goa'), ('GJ', 'Gujarat'), ('HR', 'Haryana'), ('HP', 'Himachal Pradesh'), ('JH', 'Jharkhand'), ('KA', 'Karnataka'), ('KL', 'Kerala'), ('MP', 'Madhya Pradesh'), ('MH', 'Maharashtra'), ('MN', 'Manipur'), ('ML', 'Meghalaya'), ('MZ', 'Mizoram'), ('NL', 'Nagaland'), ('OR', 'Odisha'), ('PB', 'Punjab'), ('RJ', 'Rajasthan'), ('SK', 'Sikkim'), ('TN', 'Tamil Nadu'), ('TG', 'Telangana'), ('TR', 'Tripura'), ('UP', 'Uttar Pradesh'), ('UK', 'Uttarakhand'), ('WB', 'West Bengal'), ('JK', 'Jammu and Kashmir'), ('AN', 'Andaman and Nicobar Islands'), ('CH', 'Chandigarh'), ('DN', 'Dadra and Nagar Haveli'), ('DD', 'Daman and Diu'), ('DL', 'Delhi'), ('LD', 'Lakshadweep'), ('PY', 'Puducherry')], max_length=2, null=True)),
                ('local_pincode', models.CharField(blank=True, max_length=6, null=True)),
                ('permanent_address', models.CharField(blank=True, max_length=256, null=True)),
                ('permanent_district', models.CharField(blank=True, max_length=30, null=True)),
                ('permanent_state_or_union_territory', models.CharField(blank=True, choices=[('AP', 'Andhra Pradesh'), ('AR', 'Arunachal Pradesh'), ('AS', 'Assam'), ('BR', 'Bihar'), ('CT', 'Chhattisgarh'), ('GA', 'Goa'), ('GJ', 'Gujarat'), ('HR', 'Haryana'), ('HP', 'Himachal Pradesh'), ('JH', 'Jharkhand'), ('KA', 'Karnataka'), ('KL', 'Kerala'), ('MP', 'Madhya Pradesh'), ('MH', 'Maharashtra'), ('MN', 'Manipur'), ('ML', 'Meghalaya'), ('MZ', 'Mizoram'), ('NL', 'Nagaland'), ('OR', 'Odisha'), ('PB', 'Punjab'), ('RJ', 'Rajasthan'), ('SK', 'Sikkim'), ('TN', 'Tamil Nadu'), ('TG', 'Telangana'), ('TR', 'Tripura'), ('UP', 'Uttar Pradesh'), ('UK', 'Uttarakhand'), ('WB', 'West Bengal'), ('JK', 'Jammu and Kashmir'), ('AN', 'Andaman and Nicobar Islands'), ('CH', 'Chandigarh'), ('DN', 'Dadra and Nagar Haveli'), ('DD', 'Daman and Diu'), ('DL', 'Delhi'), ('LD', 'Lakshadweep'), ('PY', 'Puducherry')], max_length=2, null=True)),
                ('permanent_pincode', models.CharField(blank=True, max_length=6, null=True)),
                ('isActive', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_personal_details', to='api.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_personal_details', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('otp', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Calculations',
            fields=[
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='calculations', serialize=False, to='api.company')),
                ('ot_calculation', models.CharField(choices=[('26', '26'), ('30', '30'), ('month_days', 'month_days')], default='26', max_length=10)),
                ('el_calculation', models.CharField(choices=[('26', '26'), ('30', '30')], default='26', max_length=2)),
                ('notice_pay', models.CharField(choices=[('26', '26'), ('30', '30')], default='30', max_length=2)),
                ('service_calculation', models.CharField(choices=[('26', '26'), ('30', '30')], default='30', max_length=2)),
                ('gratuity_calculation', models.CharField(choices=[('26', '26'), ('30', '30')], default='26', max_length=2)),
                ('el_days_calculation', models.PositiveSmallIntegerField(default=20)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyDetails',
            fields=[
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='company_details', serialize=False, to='api.company')),
                ('address', models.TextField(blank=True, null=True)),
                ('key_person', models.CharField(blank=True, max_length=64, null=True)),
                ('involving_industry', models.CharField(blank=True, max_length=64, null=True)),
                ('phone_no', models.PositiveBigIntegerField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=150, null=True)),
                ('pf_no', models.CharField(blank=True, max_length=30, null=True)),
                ('esi_no', models.PositiveBigIntegerField(blank=True, null=True)),
                ('head_office_address', models.TextField(blank=True, null=True)),
                ('pan_no', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('gst_no', models.CharField(blank=True, max_length=15, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeePfEsiDetail',
            fields=[
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='employee_pf_esi_detail', serialize=False, to='api.employeepersonaldetail')),
                ('pf_allow', models.BooleanField(default=False)),
                ('pf_number', models.CharField(blank=True, max_length=50, null=True)),
                ('pf_limit_ignore_employee', models.BooleanField(default=False)),
                ('pf_limit_ignore_employee_value', models.PositiveIntegerField(blank=True, null=True)),
                ('pf_limit_ignore_employer', models.BooleanField(default=False)),
                ('pf_limit_ignore_employer_value', models.PositiveIntegerField(blank=True, null=True)),
                ('vpf_amount', models.PositiveIntegerField(default=0)),
                ('tds_amount', models.PositiveIntegerField(default=0)),
                ('uan_number', models.CharField(blank=True, max_length=30, null=True)),
                ('esi_allow', models.BooleanField(default=False)),
                ('esi_number', models.CharField(blank=True, max_length=30, null=True)),
                ('esi_dispensary', models.CharField(blank=True, max_length=100, null=True)),
                ('esi_on_ot', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeProfessionalDetail',
            fields=[
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='employee_professional_detail', serialize=False, to='api.employeepersonaldetail')),
                ('date_of_joining', models.DateField()),
                ('date_of_confirm', models.DateField()),
                ('weekly_off', models.CharField(choices=[('no_off', 'No Off'), ('mon', 'Monday'), ('tue', 'Tuesday'), ('wed', 'Wednesday'), ('thu', 'Thursday'), ('fri', 'Friday'), ('sat', 'Saturday'), ('sun', 'Sunday')], default='sun', max_length=6)),
                ('extra_off', models.CharField(choices=[('no_off', 'No Off'), ('mon1', 'First Monday'), ('mon2', 'Second Monday'), ('mon3', 'Third Monday'), ('mon4', 'Fourth Monday'), ('tue1', 'First Tuesday'), ('tue2', 'Second Tuesday'), ('tue3', 'Third Tuesday'), ('tue4', 'Fourth Tuesday'), ('wed1', 'First Wednesday'), ('wed2', 'Second Wednesday'), ('wed3', 'Third Wednesday'), ('wed4', 'Fourth Wednesday'), ('thu1', 'First Thursday'), ('thu2', 'Second Thursday'), ('thu3', 'Third Thursday'), ('thu4', 'Fourth Thursday'), ('fri1', 'First Friday'), ('fri2', 'Second Friday'), ('fri3', 'Third Friday'), ('fri4', 'Fourth Friday'), ('sat1', 'First Saturday'), ('sat2', 'Second Saturday'), ('sat3', 'Third Saturday'), ('sat4', 'Fourth Saturday'), ('sun1', 'First Sunday'), ('sun2', 'Second Sunday'), ('sun3', 'Third Sunday'), ('sun4', 'Fourth Sunday')], default='no_off', max_length=10)),
                ('resigned', models.BooleanField(default=False)),
                ('resignation_date', models.DateField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeSalaryDetail',
            fields=[
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='employee_salary_detail', serialize=False, to='api.employeepersonaldetail')),
                ('overtime_type', models.CharField(choices=[('no_overtime', 'No Overtime'), ('all_days', 'All Days'), ('holiday_weekly_off', 'Holiday/Weekly Off')], default='no_overtime', max_length=20)),
                ('overtime_rate', models.CharField(blank=True, choices=[('S', 'Single'), ('D', 'Double')], max_length=1, null=True)),
                ('salary_mode', models.CharField(choices=[('monthly', 'Monthly'), ('daily', 'Daily'), ('piece_rate', 'Piece Rate')], default='monthly', max_length=20)),
                ('payment_mode', models.CharField(choices=[('bank_transfer', 'Bank Transfer'), ('cheque', 'Cheque'), ('cash', 'Cash'), ('rtgs', 'RTGS'), ('neft', 'NEFT')], default='bank_transfer', max_length=20)),
                ('bank_name', models.CharField(blank=True, max_length=75, null=True)),
                ('account_number', models.CharField(blank=True, max_length=50, null=True)),
                ('ifcs', models.CharField(blank=True, max_length=25, null=True)),
                ('labour_wellfare_fund', models.BooleanField(default=False)),
                ('late_deduction', models.BooleanField(default=False)),
                ('bonus_allow', models.BooleanField(default=False)),
                ('bonus_exg', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PfEsiSetup',
            fields=[
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='pf_esi_setup_details', serialize=False, to='api.company')),
                ('ac_1_epf_employee_percentage', models.DecimalField(decimal_places=2, default=12, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('ac_1_epf_employee_limit', models.PositiveIntegerField(default=15000)),
                ('ac_1_epf_employer_percentage', models.DecimalField(decimal_places=2, default=3.67, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('ac_1_epf_employer_limit', models.PositiveIntegerField(default=15000)),
                ('ac_10_eps_employer_percentage', models.DecimalField(decimal_places=2, default=8.33, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('ac_10_eps_employer_limit', models.PositiveIntegerField(default=15000)),
                ('ac_2_employer_percentage', models.DecimalField(decimal_places=2, default=0.5, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('ac_21_employer_percentage', models.DecimalField(decimal_places=2, default=0.5, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('ac_22_employer_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('employer_pf_code', models.CharField(blank=True, max_length=100, null=True)),
                ('esi_employee_percentage', models.DecimalField(decimal_places=2, default=0.75, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('esi_employee_limit', models.PositiveIntegerField(default=21000)),
                ('esi_employer_percentage', models.DecimalField(decimal_places=2, default=3.25, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('esi_employer_limit', models.PositiveIntegerField(default=21000)),
                ('employer_esi_code', models.CharField(blank=True, max_length=100, null=True)),
                ('enable_labour_welfare_fund', models.BooleanField(default=False)),
                ('labour_wellfare_fund_employer_code', models.CharField(blank=True, max_length=100, null=True)),
                ('labour_welfare_fund_percentage', models.DecimalField(decimal_places=2, default=0.2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('labour_welfare_fund_limit', models.PositiveIntegerField(default=31)),
            ],
        ),
        migrations.CreateModel(
            name='Shift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('beginning_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('lunch_time', models.PositiveSmallIntegerField(default=0)),
                ('tea_time', models.PositiveSmallIntegerField(default=0)),
                ('late_grace', models.PositiveSmallIntegerField(default=0)),
                ('ot_begin_after', models.PositiveSmallIntegerField(default=0)),
                ('next_shift_delay', models.PositiveSmallIntegerField(default=0)),
                ('max_late_allowed_min', models.PositiveSmallIntegerField()),
                ('accidental_punch_buffer', models.PositiveSmallIntegerField(default=0)),
                ('half_day_minimum_minutes', models.PositiveSmallIntegerField()),
                ('full_day_minimum_minutes', models.PositiveSmallIntegerField()),
                ('short_leaves', models.PositiveSmallIntegerField(default=0)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shifts', to='api.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shifts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SalaryGrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salary_grades', to='api.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salary_grades', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OwnerToRegular',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='regulars', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='owners', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LeaveGrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('limit', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mandatory_leave', models.BooleanField(default=False)),
                ('paid', models.BooleanField()),
                ('generate_frequency', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_grades', to='api.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_grades', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('date', models.DateField()),
                ('mandatory_holiday', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='holidays', to='api.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='holidays', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeShifts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='all_company_employees_shifts', to='api.company')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shifts', to='api.employeepersonaldetail')),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employees_shifts', to='api.shift')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='all_employees_shifts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeSalaryPrepared',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('incentive_amount', models.PositiveIntegerField(default=0)),
                ('pf_deducted', models.PositiveIntegerField(default=0)),
                ('esi_deducted', models.PositiveIntegerField(default=0)),
                ('vpf_deducted', models.PositiveIntegerField(default=0)),
                ('advance_deducted', models.PositiveIntegerField(default=0)),
                ('tds_deducted', models.PositiveIntegerField(default=0)),
                ('labour_welfare_fund_deducted', models.PositiveIntegerField(default=0)),
                ('others_deducted', models.PositiveIntegerField(default=0)),
                ('paid_days_count', models.PositiveSmallIntegerField(default=0)),
                ('present_count', models.PositiveSmallIntegerField(default=0)),
                ('weekly_off_days_count', models.PositiveSmallIntegerField(default=0)),
                ('holiday_days_count', models.PositiveSmallIntegerField(default=0)),
                ('not_paid_days_count', models.PositiveSmallIntegerField(default=0)),
                ('net_ot_minutes_monthly', models.PositiveSmallIntegerField(default=0)),
                ('net_ot_amount_monthly', models.PositiveIntegerField(default=0)),
                ('payment_mode', models.CharField(choices=[('bank_transfer', 'Bank Transfer'), ('cheque', 'Cheque'), ('cash', 'Cash'), ('rtgs', 'RTGS'), ('neft', 'NEFT')], default='bank_transfer', max_length=20)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='all_employees_salaries_prepared', to='api.company')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salaries_prepared', to='api.employeepersonaldetail')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='all_company_employees_salaries_prepared', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeSalaryEarning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(default=0)),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='all_company_employees_earnings', to='api.company')),
                ('earnings_head', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employees_earnings', to='api.earningshead')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earnings', to='api.employeepersonaldetail')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='all_employees_earnings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeMonthlyAttendanceDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('present_count', models.PositiveSmallIntegerField(default=0)),
                ('date', models.DateField()),
                ('weekly_off_days_count', models.PositiveSmallIntegerField(default=0)),
                ('paid_days_count', models.PositiveSmallIntegerField(default=0)),
                ('holiday_days_count', models.PositiveSmallIntegerField(default=0)),
                ('not_paid_days_count', models.PositiveSmallIntegerField(default=0)),
                ('net_ot_minutes_monthly', models.PositiveIntegerField(default=0)),
                ('compensation_off_days_count', models.PositiveSmallIntegerField(default=0)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='all_employees_present_count', to='api.company')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='present_count', to='api.employeepersonaldetail')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='all_company_employees_monthly_attendance_details', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeLeaveOpening',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leave_count', models.PositiveSmallIntegerField(default=0)),
                ('year', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1900, message='Year cannot be less than 1900.'), django.core.validators.MaxValueValidator(2100, message='Year cannot be more than 2100.')])),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='all_employees_leave_openings', to='api.company')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_opening', to='api.employeepersonaldetail')),
                ('leave', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='all_leave_openings', to='api.leavegrade')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='all_company_employees_leave_openings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeGenerativeLeaveRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('leave_count', models.PositiveSmallIntegerField(default=0)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='all_employees_generative_leave_record', to='api.company')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generative_leave_record', to='api.employeepersonaldetail')),
                ('leave', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='current_generative_leave_record', to='api.leavegrade')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='all_company_employees_generative_leave_record', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeFamilyNomineeDetial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('address', models.CharField(blank=True, max_length=256, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('relation', models.CharField(choices=[('Father', 'Father'), ('Mother', 'Mother'), ('Wife', 'Wife'), ('Son', 'Son'), ('Brother', 'Brother'), ('Sister', 'Sister'), ('Daughter', 'Daughter'), ('Husband', 'Husband')], max_length=10)),
                ('residing', models.BooleanField(default=True)),
                ('esi_benefit', models.BooleanField(default=True)),
                ('pf_benefits', models.BooleanField(default=True)),
                ('is_esi_nominee', models.BooleanField(default=False)),
                ('esi_nominee_share', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('is_pf_nominee', models.BooleanField(default=False)),
                ('pf_nominee_share', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('is_fa_nominee', models.BooleanField(default=False)),
                ('fa_nominee_share', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('is_gratuity_nominee', models.BooleanField(default=False)),
                ('gratuity_nominee_share', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_family_nominee_details', to='api.company')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_family_nominee_detail', to='api.employeepersonaldetail')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_family_nominee_details', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machine_in', models.TimeField(blank=True, null=True)),
                ('machine_out', models.TimeField(blank=True, null=True)),
                ('manual_in', models.TimeField(blank=True, null=True)),
                ('manual_out', models.TimeField(blank=True, null=True)),
                ('date', models.DateField()),
                ('ot_min', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('late_min', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('pay_multiplier', api.models.LimitedFloatField(decimal_places=1, editable=False, max_digits=3, validators=[api.models.validate_pay_multiplier_allowed_values])),
                ('manual_mode', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='all_company_employees_attendance', to='api.company')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance', to='api.employeepersonaldetail')),
                ('first_half', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees_first_half_attendances_with_same_leave', to='api.leavegrade')),
                ('second_half', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees_second_half_attendances_with_same_leave', to='api.leavegrade')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='all_employees_attendance', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeAdvancePayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('principal', models.PositiveIntegerField()),
                ('emi', models.PositiveIntegerField()),
                ('date', models.DateField()),
                ('closed', models.BooleanField(default=False)),
                ('closed_date', models.DateField(blank=True, null=True)),
                ('tenure_months_left', models.PositiveSmallIntegerField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='all_employees_advance_payments', to='api.company')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='advance_payments', to='api.employeepersonaldetail')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='all_company_employees_advance_payments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeAdvanceEmiRepayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField()),
                ('employee_advance_payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='all_emis_of_advance', to='api.employeeadvancepayment')),
                ('salary_prepared', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emis_with_salary_prepared', to='api.employeesalaryprepared')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='all_company_employees_advance_emi_repayments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EarnedAmount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.PositiveIntegerField(default=0)),
                ('earned_amount', models.PositiveIntegerField(default=0)),
                ('arear_amount', models.PositiveIntegerField(default=0)),
                ('earnings_head', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earning_head_earned_amount', to='api.earningshead')),
                ('salary_prepared', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='current_salary_earned_amounts', to='api.employeesalaryprepared')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='all_company_employees_earned_amounts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='designations', to='api.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='designations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Deparment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deparments', to='api.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DeductionsHead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('mandatory_deduction', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deductions_head', to='api.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deductions_head', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='api.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='banks', to='api.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='banks', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Regular',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('api.user',),
        ),
        migrations.CreateModel(
            name='WeeklyOffHolidayOff',
            fields=[
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='weekly_off_holiday_off_entry', serialize=False, to='api.company')),
                ('min_days_for_weekly_off', models.PositiveSmallIntegerField(default=0)),
                ('min_days_for_holiday_off', models.PositiveSmallIntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weekly_off_holiday_off_entries', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='shift',
            constraint=models.UniqueConstraint(fields=('user', 'company', 'name'), name='unique_shift_name_per_user'),
        ),
        migrations.AddField(
            model_name='pfesisetup',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pf_esi_setup_details', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='leavegrade',
            constraint=models.UniqueConstraint(fields=('user', 'company', 'name'), name='unique_leave_grade_name_per_user'),
        ),
        migrations.AddConstraint(
            model_name='holiday',
            constraint=models.UniqueConstraint(fields=('user', 'company', 'name'), name='unique_hodiday_name_per_user'),
        ),
        migrations.AddConstraint(
            model_name='employeeshifts',
            constraint=models.UniqueConstraint(fields=('employee', 'shift', 'from_date'), name='unique_employee_shift_from_date'),
        ),
        migrations.AddConstraint(
            model_name='employeeshifts',
            constraint=models.UniqueConstraint(fields=('shift', 'employee', 'to_date'), name='unique_employee_shift_to_date'),
        ),
        migrations.AddConstraint(
            model_name='employeesalaryprepared',
            constraint=models.UniqueConstraint(fields=('date', 'employee'), name='unique_salary_for_each_month'),
        ),
        migrations.AddConstraint(
            model_name='employeesalaryearning',
            constraint=models.UniqueConstraint(fields=('employee', 'earnings_head', 'from_date'), name='unique_employee_earnings_head_with_from_date'),
        ),
        migrations.AddConstraint(
            model_name='employeesalaryearning',
            constraint=models.UniqueConstraint(fields=('earnings_head', 'employee', 'to_date'), name='unique_employee_earnings_head_with_to_date'),
        ),
        migrations.AddField(
            model_name='employeesalarydetail',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_salary_details', to='api.company'),
        ),
        migrations.AddField(
            model_name='employeesalarydetail',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_salary_details', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='employeeprofessionaldetail',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employee_professional_detail', to='api.category'),
        ),
        migrations.AddField(
            model_name='employeeprofessionaldetail',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_professional_details', to='api.company'),
        ),
        migrations.AddField(
            model_name='employeeprofessionaldetail',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employee_professional_detail', to='api.deparment'),
        ),
        migrations.AddField(
            model_name='employeeprofessionaldetail',
            name='designation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employee_professional_detail', to='api.designation'),
        ),
        migrations.AddField(
            model_name='employeeprofessionaldetail',
            name='salary_grade',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employee_professional_detail', to='api.salarygrade'),
        ),
        migrations.AddField(
            model_name='employeeprofessionaldetail',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_professional_details', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='employeepfesidetail',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_pf_esi_details', to='api.company'),
        ),
        migrations.AddField(
            model_name='employeepfesidetail',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_pf_esi_details', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='employeepersonaldetail',
            constraint=models.UniqueConstraint(fields=('user', 'company', 'paycode'), name='unique_paycode_per_employee_within_each_company_and_user'),
        ),
        migrations.AddConstraint(
            model_name='employeepersonaldetail',
            constraint=models.UniqueConstraint(fields=('user', 'company', 'attendance_card_no'), name='unique_attendance_card_no_per_employee_within_each_company_and_user'),
        ),
        migrations.AddConstraint(
            model_name='employeeleaveopening',
            constraint=models.UniqueConstraint(fields=('employee', 'year', 'company'), name='unique_year_per_employee_per_company'),
        ),
        migrations.AddConstraint(
            model_name='employeegenerativeleaverecord',
            constraint=models.UniqueConstraint(fields=('employee', 'date', 'company', 'leave'), name='unique_date_per_employee_per_company'),
        ),
        migrations.AddConstraint(
            model_name='employeeattendance',
            constraint=models.UniqueConstraint(fields=('employee', 'date', 'company'), name='unique_employee_attendance_date_wise'),
        ),
        migrations.AddConstraint(
            model_name='earningshead',
            constraint=models.UniqueConstraint(fields=('user', 'company', 'name'), name='unique_earnings_head_name_per_user'),
        ),
        migrations.AddConstraint(
            model_name='earnedamount',
            constraint=models.UniqueConstraint(fields=('earnings_head', 'salary_prepared'), name='unique_earned_amount_for_each_earnings_head'),
        ),
        migrations.AddConstraint(
            model_name='deductionshead',
            constraint=models.UniqueConstraint(fields=('user', 'company', 'name'), name='unique_deductions_head_name_per_user'),
        ),
        migrations.AddField(
            model_name='companydetails',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='all_companies_details', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='calculations',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calculations', to=settings.AUTH_USER_MODEL),
        ),
    ]
