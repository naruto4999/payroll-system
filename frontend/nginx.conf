server {
    listen 80;
    listen [::]:80;
    server_name pay-per.me www.pay-per.me;

    location / {
        return 301 https://$host$request_uri;
    }

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}

server {
    listen 443 ssl; # Enable HTTP/2
    listen [::]:443 ssl; # Enable HTTP/2
    http2  on;
    server_name pay-per.me www.pay-per.me;

    ssl_certificate /etc/letsencrypt/live/pay-per.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/pay-per.me/privkey.pem;
    ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

    ssl_session_tickets off;
    ssl_protocols TLSv1.2 TLSv1.3; # Removed TLSv1
    ssl_prefer_server_ciphers off; # Not needed with modern SSL protocols
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
   # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
   # add_header X-Content-Type-Options nosniff;
    #add_header X-Frame-Options SAMEORIGIN;

    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    location /api {
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $https;
        proxy_connect_timeout 360s;
        proxy_read_timeout 360s;
    }
}
